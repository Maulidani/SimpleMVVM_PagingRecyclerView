plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id("com.google.dagger.hilt.android")
}

android {
    namespace 'com.example.simplemvvm'
    compileSdk 33

    defaultConfig {
        applicationId "com.example.simplemvvm"
        minSdk 26
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
    }
}

dependencies {

    //default
    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.7.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0'

    // activity, fragment
    def activity_version = "1.6.1"
    def fragment_version = "1.5.5"
    implementation("androidx.activity:activity-ktx:$activity_version")
    implementation("androidx.fragment:fragment-ktx:$fragment_version")

    // retrofit, json converter & okhttp
    def retrofit_version = '2.9.0'
    def okhttp_version = '4.10.0'
    implementation "com.squareup.retrofit2:retrofit:${retrofit_version}"
    implementation "com.squareup.retrofit2:converter-gson:${retrofit_version}"
    implementation(platform("com.squareup.okhttp3:okhttp-bom:${okhttp_version}")) // bill of materials (BOM)
    implementation("com.squareup.okhttp3:okhttp")
    implementation("com.squareup.okhttp3:logging-interceptor")

    // image loading
    def coil_version = '2.2.2'
    implementation("io.coil-kt:coil:${coil_version}")

    // viewmodel & livedata
    def lifecycle_version = "2.5.1"
    implementation("androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version")
    implementation("androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version")
    implementation("androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version")

    // coroutine
    def coroutine_version = "1.6.4"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:${coroutine_version}"

    // paging
    def paging_version = "3.1.1"
    implementation("androidx.paging:paging-runtime-ktx:${paging_version}")

    // dagger hilt
    def dagger_version = "2.44"
    kapt("com.google.dagger:hilt-android-compiler:${dagger_version}")
    implementation("com.google.dagger:hilt-android:${dagger_version}")

}

// Allow references to generated code
kapt {
    correctErrorTypes = true
}